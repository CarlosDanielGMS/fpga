$date
	Tue Oct 07 22:03:53 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_dot_product $end
$var wire 64 ! result [63:0] $end
$var wire 1 " done $end
$var reg 32 # a0 [31:0] $end
$var reg 32 $ a1 [31:0] $end
$var reg 32 % a2 [31:0] $end
$var reg 32 & a3 [31:0] $end
$var reg 32 ' a4 [31:0] $end
$var reg 32 ( a5 [31:0] $end
$var reg 32 ) a6 [31:0] $end
$var reg 32 * a7 [31:0] $end
$var reg 32 + b0 [31:0] $end
$var reg 32 , b1 [31:0] $end
$var reg 32 - b2 [31:0] $end
$var reg 32 . b3 [31:0] $end
$var reg 32 / b4 [31:0] $end
$var reg 32 0 b5 [31:0] $end
$var reg 32 1 b6 [31:0] $end
$var reg 32 2 b7 [31:0] $end
$var reg 1 3 clock $end
$var reg 64 4 expected [63:0] $end
$var reg 1 5 reset $end
$var reg 1 6 start $end
$scope module dut $end
$var wire 32 7 a0 [31:0] $end
$var wire 32 8 a1 [31:0] $end
$var wire 32 9 a2 [31:0] $end
$var wire 32 : a3 [31:0] $end
$var wire 32 ; a4 [31:0] $end
$var wire 32 < a5 [31:0] $end
$var wire 32 = a6 [31:0] $end
$var wire 32 > a7 [31:0] $end
$var wire 32 ? b0 [31:0] $end
$var wire 32 @ b1 [31:0] $end
$var wire 32 A b2 [31:0] $end
$var wire 32 B b3 [31:0] $end
$var wire 32 C b4 [31:0] $end
$var wire 32 D b5 [31:0] $end
$var wire 32 E b6 [31:0] $end
$var wire 32 F b7 [31:0] $end
$var wire 1 3 clock $end
$var wire 1 5 reset $end
$var wire 1 6 start $end
$var reg 1 " done $end
$var reg 64 G result [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
06
15
bx 4
03
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
0"
b0 !
$end
#10
0"
b0 !
b0 G
06
b0 4
b10000 2
b10000 F
b1110 1
b1110 E
b1100 0
b1100 D
b1010 /
b1010 C
b1000 .
b1000 B
b110 -
b110 A
b100 ,
b100 @
b10 +
b10 ?
b1111 *
b1111 >
b1101 )
b1101 =
b1011 (
b1011 <
b1001 '
b1001 ;
b111 &
b111 :
b101 %
b101 9
b11 $
b11 8
b1 #
b1 7
15
13
#20
03
#30
1"
b1111110000 !
b1111110000 G
06
b0 4
b11000 2
b11000 F
b10101 1
b10101 E
b10010 0
b10010 D
b1111 /
b1111 C
b1100 .
b1100 B
b1001 -
b1001 A
b110 ,
b110 @
b11 +
b11 ?
b1110 *
b1110 >
b1100 )
b1100 =
b1010 (
b1010 <
b1000 '
b1000 ;
b110 &
b110 :
b100 %
b100 9
b10 $
b10 8
b0 #
b0 7
05
13
